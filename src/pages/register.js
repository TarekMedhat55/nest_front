import FormInput from "@/components/FormInput";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useFormik } from "formik";
import * as Yup from "yup";
const Register = () => {
  const formik = useFormik({
    initialValues: {
      firstName: "",
      lastName: "",
      email: "",
      password: "",
    },
    validationSchema: Yup.object({
      firstName: Yup.string()
        .max(15, "Must be 15 characters or less")
        .required("First Name Required"),
      lastName: Yup.string()
        .max(15, "Must be 15 characters or less")
        .required("Last Name Required"),
      email: Yup.string()
        .email("Invalid email address")
        .required("Email Required"),
      password: Yup.string()
        .min(6, "Must be 6 characters or more")
        .required("Password Required"),
    }),
    onSubmit: (values) => {
      alert(JSON.stringify(values, null, 2));
    },
  });
  return (
    <>
      <Head>
        <title>Register - Nest </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <div className="login">
        <div className="login-content">
          <div className="login-logo">
            <Image src="/images/logo.svg" alt="nest" width={215} height={66} />
          </div>
          <div className="login-header">
            <h2>Welcome!</h2>
            <p>
              Already have an account?
              <Link href="/login"> login</Link>
            </p>
          </div>
          <div className="login-form">
            <form onSubmit={formik.handleSubmit}>
              <div className="mb-3">
                <FormInput
                  name={"firstName"}
                  placeholder={"Enter first name"}
                  title={"First Name *"}
                  type={"text"}
                  handleChange={formik.handleChange}
                  handleBlur={formik.handleBlur}
                  value={formik.values.firstName}
                  formikTouched={formik.touched.firstName}
                  formikErrors={formik.errors.firstName}
                />
                {formik.touched.firstName && formik.errors.firstName ? (
                  <div className="text-danger ">{formik.errors.firstName}</div>
                ) : null}
              </div>
              <div className="mb-3">
                <FormInput
                  name={"lastName"}
                  placeholder={"Enter last name"}
                  title={"Last Name *"}
                  type={"text"}
                  handleChange={formik.handleChange}
                  handleBlur={formik.handleBlur}
                  value={formik.values.lastName}
                  formikTouched={formik.touched.lastName}
                  formikErrors={formik.errors.lastName}
                />
                {formik.touched.lastName && formik.errors.lastName ? (
                  <div className="text-danger ">{formik.errors.lastName}</div>
                ) : null}
              </div>
              <div className="mb-3">
                <FormInput
                  name={"email"}
                  placeholder={"Enter email"}
                  title={"Email *"}
                  type={"email"}
                  handleChange={formik.handleChange}
                  handleBlur={formik.handleBlur}
                  value={formik.values.email}
                  formikTouched={formik.touched.email}
                  formikErrors={formik.errors.email}
                />
                {formik.touched.email && formik.errors.email ? (
                  <div className="text-danger ">{formik.errors.email}</div>
                ) : null}
              </div>
              <div className="mb-3">
                <FormInput
                  name={"password"}
                  placeholder={"Enter password"}
                  title={"Password *"}
                  type={"password"}
                  handleChange={formik.handleChange}
                  handleBlur={formik.handleBlur}
                  value={formik.values.password}
                  formikTouched={formik.touched.password}
                  formikErrors={formik.errors.password}
                />
                {formik.touched.password && formik.errors.password ? (
                  <div className="text-danger ">{formik.errors.password}</div>
                ) : null}
              </div>
              <div className="button-submit">
                <button type="submit">Register</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </>
  );
};

export default Register;
